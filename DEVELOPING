const express = require('express');
const app = express();
const PORT = 3000;

app.use(express.json());

// History array to store operations
const history = [];

// Helper function to evaluate mathematical expressions
const evaluateExpression = (expression) => {
  try {
    return eval(expression);
  } catch (error) {
    return 'Error';
  }
};

// Middleware to log requests
app.use((req, res, next) => {
  console.log(`${req.method} request at ${req.url}`);
  next();
});

// Route to handle mathematical operations
app.get('/:numbers/:operator/:numbers2', (req, res) => {
  const numbers = req.params.numbers.split('/').map(Number);
  const operator = req.params.operator;
  const numbers2 = req.params.numbers2.split('/').map(Number);

  const expression = numbers.join(' ') + ' ' + operator + ' ' + numbers2.join(' ');
  const answer = evaluateExpression(expression);

  const question = numbers.join(' ') + operator + numbers2.join(' ');
  const operation = { question, answer };

  history.push(operation);
  if (history.length > 20) {
    history.shift();
  }

  res.json(operation);
});

// Route to get history
app.get('/history', (req, res) => {
  res.json(history);
});

app.listen(PORT, () => {
  console.log(`Server is running on port ${PORT}`);
});
